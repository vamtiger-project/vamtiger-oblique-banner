{"version":3,"file":"vamtiger-oblique-banner.js","sources":["../source/html/index.ts","../source/types.ts","../source/get-template.ts","../node_modules/vamtiger-browser-method/source/types.ts","../node_modules/vamtiger-browser-method/source/load-script.ts","../source/set-data.ts","../source/get-oblique-image-container.ts","../source/set-oblique-image-containers.ts","../node_modules/vamtiger-browser-method/source/load-shadow-stylesheet.ts","../source/config.ts","../source/element.ts","../source/get-jsonld.ts","../source/vamtiger-oblique-banner.ts"],"sourcesContent":["export default '<slot name=\"oblique-banner\"></slot><figure slot=\"oblique-banner\"><picture><img></picture></figure>';","export enum ObservedAttributes {\n    jsonld = 'jsonld'\n}\n\nexport enum StringConstant {\n    nothing = '',\n    newLine = '\\n'\n}\n\nexport enum Attribute {\n    jsonld = 'jsonld'\n}\n\nexport enum Selector {\n    jsonld = '[type=\"application/ld+json\"]',\n    style = 'style',\n    container = '.container',\n    slot = 'slot',\n    obliqueBanner = '[slot=\"oblique-banner\"]',\n    picture = 'picture',\n    img = 'img'\n}\n\nexport interface IGetTemplate {\n    selector: Selector\n}\n\nexport interface IJsonLd {\n    \"@context\": string;\n    author: IAuthor;\n    \"@graph\": IImage[];\n}\n\nexport interface IAuthor {\n    \"@type\": string;\n    name: string;\n}\n\nexport interface IImage {\n    \"@type\": string;\n    name: string;\n    description: string;\n    image: string;\n}\n\nexport type GetTemplate<P extends IGetTemplate> = \n    P['selector'] extends Selector.style ? HTMLStyleElement :\n    P['selector'] extends Selector.slot ? HTMLSlotElement :\n    P['selector'] extends Selector.obliqueBanner ? HTMLElement :\n    P['selector'] extends Selector.picture ? HTMLPictureElement :\n    P['selector'] extends Selector.img ? HTMLImageElement :\n    never;\n\nexport type ExcludeUndefined<T> = {\n    [K in keyof T]: NonNullable<T>;\n}","import html from './html';\nimport css from './css';\nimport { IGetTemplate, GetTemplate, StringConstant } from './types';\n\nconst { nothing } = StringConstant;\nconst template = document.createElement('template');\nconst stylesheet = `<style>${css}</style>`\nconst templateHtml = [\n    stylesheet,\n    html\n].join(nothing);\n\ntemplate.innerHTML = templateHtml;\n\nexport default <P extends IGetTemplate>({ selector }: P) => {\n    const templateElement = template.content.querySelector(selector);\n    const currentTemplate = templateElement && templateElement.cloneNode(true) as GetTemplate<P>;\n    \n    return currentTemplate;\n};","import * as tslib from '../node_modules/tslib/tslib';\n\nexport enum ScriptType {\n    jsonld = 'application/ld+json'\n}\n\nexport enum ScriptAttribute {\n    type = 'type'\n}\n\nexport enum ErrorMessage {\n    failedToLoadScript = 'Failed to load script',\n    windowPropertyNotSet = 'Window property not set'\n}\n\nexport enum StringConstant {\n    slash = '/'\n}\n\nexport enum LinkRel {\n    stylesheet = 'stylesheet'\n}\n\nexport enum LoadScriptElement {\n    script = 'script',\n    link = 'link',\n    style = 'style'\n}\n\nexport enum Selector {\n    lastStylesheet = 'style:last-of-type'\n}\n\nexport interface ILoadRemoteScriptParams {\n    src: string;\n}\n\nexport interface ILoadRemoteStylesheetScriptParams {\n    href: string;\n}\n\nexport interface ILoadLocalScriptParams {\n    name: string;\n}\n\nexport interface ILoadScriptParams {\n    js: string;\n    jsonld?: boolean;\n}\n\nexport interface ILoadStylesheetScriptParams {\n    css: string;\n}\n\nexport interface ILoadScript {\n    params: LocalScriptParams\n        | LocalStylesheetScriptParams\n        | ILoadRemoteScriptParams\n        | ILoadRemoteStylesheetScriptParams;\n    reject: (error: Error) => void\n}\n\nexport interface ILoadShadowStylesheet {\n    css: string;\n    element: HTMLElement;\n}\n\nexport type TsLibType = typeof tslib;\n\nexport type TsLibKey = keyof TsLibType;\n\nexport type TsLib = {\n    [K in TsLibKey]: TsLibType[K]\n}\n\nexport type LocalScriptParams = ILoadLocalScriptParams & ILoadScriptParams;\n\nexport type LocalStylesheetScriptParams = ILoadLocalScriptParams & ILoadStylesheetScriptParams;\n\nexport type LoadedScript<P extends ILoadScript['params']> = \n    P extends ILoadScriptParams ? HTMLScriptElement :\n    P extends ILoadStylesheetScriptParams ? HTMLStyleElement :\n    P extends ILoadRemoteScriptParams ? HTMLScriptElement :\n    P extends ILoadRemoteStylesheetScriptParams ? HTMLLinkElement :\n    never;\n\ndeclare global {\n    interface Window extends TsLib {\n        VamtigerBrowserMethod: {\n            loadScript: <P extends ILoadScript['params']>(params: P) => Promise<LoadedScript<P>>\n        };\n    }\n\n    namespace NodeJS {\n        interface  Global {\n            VamtigerBrowserMethod: Window['VamtigerBrowserMethod']\n        }\n    }\n}","import { \n    ILoadScript, \n    ErrorMessage,\n    LocalScriptParams,\n    LocalStylesheetScriptParams,\n    ILoadRemoteStylesheetScriptParams,\n    ILoadRemoteScriptParams,\n    LoadScriptElement,\n    LoadedScript,\n    LinkRel,\n    ScriptAttribute,\n    ScriptType\n} from './types';\n\nconst { failedToLoadScript } = ErrorMessage;\nconst { stylesheet } = LinkRel;\nconst { script: scriptElement, link, style } = LoadScriptElement;\n\nexport default <P extends ILoadScript['params']>(params: P) => new Promise((resolve: (script: LoadedScript<P>) => void, reject: ILoadScript['reject']) => {\n    const { head, body } = document;\n    const { js, name: scriptName, jsonld } = params as LocalScriptParams;\n    const { src } = params as ILoadRemoteScriptParams;\n    const { css, name: stylesheetName } = params as LocalStylesheetScriptParams;\n    const { href } = params as ILoadRemoteStylesheetScriptParams;\n    const remoteScript = params.hasOwnProperty('src') || params.hasOwnProperty('href');\n    const element = (js || src) && scriptElement\n        || css && style\n        || href && link;\n    const selector = src && `script[src=\"${src}\"]`\n        || href && `link[href=\"${href}\"]`\n        || js && scriptName && `script[data-name=\"${scriptName}\"`\n        || css && stylesheetName && `style[data-name=\"${stylesheetName}\"`;\n    const existingScript = (head.querySelector(selector) || body.querySelector(selector)) as LoadedScript<P>;\n    const script = selector \n        && element\n        && document.createElement(element) as LoadedScript<P>;\n        \n    if (script instanceof HTMLScriptElement) {\n        if (src) {\n            script.src = src;\n        } else if (js) {\n            script.innerHTML = js;\n            script.dataset.name = scriptName;\n\n            if (jsonld) {\n                script.setAttribute(ScriptAttribute.type, ScriptType.jsonld);\n            }\n        }\n    } else if (script instanceof HTMLLinkElement) {\n        script.rel = stylesheet;\n        script.href = href;\n    } else if (script instanceof HTMLStyleElement) {\n        script.innerHTML = css;\n        script.dataset.name = stylesheetName;\n    }\n\n    if (existingScript) {\n        resolve(existingScript);\n    } else if (script) {\n        head.appendChild(script);\n\n        if (remoteScript) {\n            script.addEventListener('load', handleLoad);\n            script.addEventListener('error', handleLoadError);\n        } else {\n            resolve(script);\n        }\n    }\n\n    function handleLoad(event: Event) {\n        if (script) {\n            script.removeEventListener('load', handleLoad);\n\n            resolve(script);\n        }\n    }\n\n    function handleLoadError(event: Event) {\n        if (script) {\n            script.removeEventListener('error', handleLoadError);\n        }\n\n        console.error(event);\n        \n        reject(new Error(`${failedToLoadScript}`));\n    }\n});","import loadScript from '../node_modules/vamtiger-browser-method/source/load-script';\nimport VamtigerObliqueBanner, { name } from './element';\nimport { IJsonLd, StringConstant, Attribute } from './types';\n\nconst { nothing } = StringConstant;\n\nlet count = 0;\n\nexport default async function (element: VamtigerObliqueBanner) {\n    const { dataset: data } = element;\n    const { stringify } = JSON;\n    const { jsonld: url } = data;\n    const currentName = `${name}-${++count}`;\n    const jsonld = url && await fetch(url)\n        .then<IJsonLd>(response => response.json());\n    const josnldString = jsonld && stringify(jsonld);\n\n    data.name = currentName;\n\n    if (josnldString && jsonld) {\n        await loadScript({\n            name: currentName,\n            js: josnldString,\n            jsonld: true\n        });\n        \n        return jsonld;\n    }\n}","import getTemplate from './get-template';\nimport { IImage, Selector, StringConstant } from './types';\n\nconst { nothing } = StringConstant\n\nexport default function (data: IImage) {\n    const { \n        image: src,\n        name,\n        description\n    } = data;\n    const alt = `${name}: ${description}`;\n    const obliqueImageContainer = getTemplate({\n        selector: Selector.obliqueBanner\n    });\n    const image = obliqueImageContainer && obliqueImageContainer.querySelector(Selector.img);\n\n    if (image) {\n        // image.src = src;\n        image.alt = alt;\n\n        image.addEventListener('load', handleLoad);\n        image.addEventListener('error', handleError);\n    }\n\n    return obliqueImageContainer;\n}\n\nfunction handleLoad(event: Event) {\n    const image = event.currentTarget as HTMLImageElement;\n\n    image.dataset.loaded = nothing;\n    \n    image.removeEventListener('loaded', handleLoad);\n}\n\nfunction handleError(event: ErrorEvent) {\n    const { error } = event;\n    const image = event.currentTarget as HTMLImageElement;\n\n    image.dataset.error = error && error.message || nothing;\n\n    image.removeEventListener('error', handleLoad);\n}","import loadShadowStylesheet from '../node_modules/vamtiger-browser-method/source/load-shadow-stylesheet';\nimport getObliqueImageContainer from './get-oblique-image-container';\nimport VamtigerObliqueBanner from './element';\nimport { IJsonLd, StringConstant } from './types';\n\nconst { newLine } = StringConstant;\n\nexport default function (element: VamtigerObliqueBanner) {\n    const { jsonld } = element;\n    const { '@graph': images } = (jsonld as IJsonLd) || [];\n    const obliqueImageContainers = images\n        .map(getObliqueImageContainer);\n    const css = [\n        ':host {',\n        `    grid-template-columns: repeat(${obliqueImageContainers.length}, 1fr)`,\n        '}'\n    ].join(newLine);\n\n    loadShadowStylesheet({\n        css,\n        element\n    });\n\n    obliqueImageContainers.forEach(obliqueImageContainer => obliqueImageContainer && element.appendChild(obliqueImageContainer));\n}","import { ILoadShadowStylesheet, Selector } from './types';\n\nexport default function ({ css, element }: ILoadShadowStylesheet) {\n    const { shadowRoot } = element;\n    const lastStylesheet = shadowRoot && shadowRoot.querySelector(Selector.lastStylesheet);\n    const stylesheet = shadowRoot && document.createElement('style');\n\n    if (stylesheet && shadowRoot) {\n        stylesheet.innerHTML = css;\n\n        if (lastStylesheet && lastStylesheet.nextElementSibling) {\n            shadowRoot.insertBefore(stylesheet, lastStylesheet.nextElementSibling);\n        } else {\n            shadowRoot.appendChild(stylesheet);\n        }\n    }\n}","import { ObservedAttributes } from './types'\n\nexport const shadowRoot = {\n    mode: 'open'\n} as ShadowRootInit;\n\nexport const observedAttributes = Object.keys(ObservedAttributes) as ObservedAttributes[];","import getTemplate from './get-template';\nimport setData from './set-data';\nimport getJsonld from './get-jsonld';\nimport setObliqueImageContainers from './set-oblique-image-containers';\nimport { shadowRoot as shadowRootConfig, observedAttributes } from './config';\nimport { GetTemplate, Selector } from './types';\n\nexport const name = 'vamtiger-oblique-banner';\n\nexport default class VamtigerObliqueBanner extends HTMLElement {\n    constructor() {\n        super();\n        const stylesheet = getTemplate({\n            selector: Selector.style\n        });\n        const slot = getTemplate({\n            selector: Selector.slot\n        });\n        const shadowRoot = this.attachShadow(shadowRootConfig);\n\n        stylesheet && shadowRoot.appendChild(stylesheet);\n        slot && shadowRoot.appendChild(slot);\n    }\n\n    async connectedCallback() {\n        await setData(this);\n        await setObliqueImageContainers(this);\n    }\n\n    get jsonld() {\n        return getJsonld(this);\n    }\n}\n\n","import VamtigerObliqueBanner, { name } from './element';\nimport { Selector, IJsonLd } from './types';\n\nexport default function (element: VamtigerObliqueBanner) {\n    const { head } = document;\n    const { parse } = JSON;\n    const { dataset: data } = element;\n    const { name } = data;\n    const selector = `script${Selector.jsonld}[data-name=\"${name}\"]`;\n    const jsonldElement = head.querySelector<HTMLScriptElement>(selector);\n    \n    let jsonldString: string;\n    let jsonLd: IJsonLd;\n\n    if (jsonldElement) {\n        jsonldString = jsonldElement.innerHTML;\n        jsonLd = parse(jsonldString);\n\n        return jsonLd;\n    }\n}","import element, { name } from './element';\n\nasync function main() {\n    customElements.define(name, element);\n}\n\nmain().catch(console.warn);"],"names":["ObservedAttributes","StringConstant","Attribute","Selector","nothing","template","document","createElement","templateHtml","join","innerHTML","ScriptType","ScriptAttribute","ErrorMessage","LinkRel","LoadScriptElement","selector","templateElement","content","querySelector","cloneNode","failedToLoadScript","stylesheet","script","scriptElement","link","style","params","Promise","resolve","reject","head","body","js","name","scriptName","jsonld","src","css","stylesheetName","href","remoteScript","hasOwnProperty","element","existingScript","HTMLScriptElement","dataset","setAttribute","type","HTMLLinkElement","rel","HTMLStyleElement","appendChild","addEventListener","handleLoad","event","removeEventListener","handleLoadError","console","error","Error","count","data","image","description","alt","obliqueImageContainer","getTemplate","obliqueBanner","img","handleError","currentTarget","loaded","message","newLine","@graph","images","obliqueImageContainers","map","getObliqueImageContainer","shadowRoot","lastStylesheet","nextElementSibling","insertBefore","loadShadowStylesheet","length","forEach","mode","VamtigerObliqueBanner","HTMLElement","[object Object]","super","slot","this","attachShadow","shadowRootConfig","stringify","JSON","url","currentName","fetch","then","response","json","josnldString","loadScript","setData","setObliqueImageContainers","parse","jsonldElement","jsonldString","jsonLd","getJsonld","customElements","define","main","catch","warn"],"mappings":"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"}